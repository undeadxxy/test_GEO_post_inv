testCommonCode;

GInvParam.isParallel = 1;
GInvParam.isPrintBySavingFile = 0;

csrGamma = 0.8;
filtCoef = 0.5;


% 23, 21, 18, 53, 80, 75
% 53, 81
% 50 80
% ids = bsGetIdsFromWelllogs(wellLogs, {'W1-2111'});
% ids = bsGetIdsFromWelllogs(wellLogs, {'W2-2132'});
ids = bsGetIdsFromWelllogs(wellLogs, {'W1-2133', 'W1-2122', 'W2-2024', 'W2-2014', 'W2-1921', 'W2-1901'});
% ids = bsGetIdsFromWelllogs(wellLogs, {'W2-2024'});
% ids = [23, 21, 18, 53, 80, 75];
% ids = 80;
[inIds, crossIds] = bsGetProfileCrossingWells(GInvParam, wellLogs(ids), 'isAlongCrossline', 0);
% inIds(:) = 50;
% randIndex = bsRandSeq(1:104, 20);
% ids = setdiff(randIndex
% [~, ~, GInvParam, data] = bsBuildInitModel(GInvParam, timeLine, wellLogs, ...
%     'title', 'cross_well', ...
%     'inIds', inIds, ...
%     'filtCoef', 0.1, ...
%     'crossIds', crossIds, ...
%     'isRebuild', 1, ...
%     'p', 2, ...
%     'nPointsUsed', 6 ...
% );


    
%% 得到每一个井的反演结果
methods = {
    struct(...
        'name', '地震数据', ...
        'type', 'Seismic', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', [basePath, '/seismic/seismic.sgy'], ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 9; 'crossId', 21; 't0', 0; 'isNegative', 0}) ...
        )...
    );...

%     struct(...
%         'name', '地震数据 (90°相移)', ...
%         'type', 'Seismic', ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', [basePath, '/seismic/phase_shift_90.sgy'], ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 9; 'crossId', 21; 't0', 0; 'isNegative', 0}) ...
%         )...
%     );...
    
    struct(...
        'name', '初始模型', ...
        'isSaveMat', 0, ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', GInvParam.initModel.ip.fileName, ...
            'segyInfo', GInvParam.initModel.ip.segyInfo ...
        )...
    );...
    
    struct(...
        'name', 'Jason', ...
        'isSaveMat', 0, ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', [basePath, '\inv_result\inverted_impedance_jason_bgp.sgy'], ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 189; 'crossId', 21; 't0', 750}) ...
        )...
    );...
    
    struct(...
        'name', '稀疏脉冲', ...
        'isSaveMat', 0, ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', [basePath, '\inv_result\geoeast_impedance_sparse_impulse_bgp.sgy'], ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 189; 'crossId', 21; 't0', 780}) ...
        )...
    );...
    
%     struct(...
%         'name', '字典反演结果', ...
%         'isSaveMat', 0, ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', 'E:\HRS projects\GEO_POST\inversion_results\sgy_results\Ip_20200330-DLSR_inline_[1_142]_crossline_[1_110].sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 9; 'crossId', 21; 't0', 0; 'isNegative', 0}) ...
%         )...
%     );...
    
%     struct(...
%         'name', '高分辨率结果 (阶段频率70Hz)', ...
%         'isSaveMat', 0, ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', 'E:\HRS projects\GEO_POST\inversion_results\sgy_results\Ip-HLF-20200330-DLSR-iDIC-1-LF-70.sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 9; 'crossId', 21; 't0', 0; 'isNegative', 0}) ...
%         )...
%     );...
    
%     struct(...
%         'name', '高分辨率结果', ...
%         'isSaveMat', 0, ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', 'E:\HRS projects\GEO_POST\inversion_results\sgy_results\Ip-HLF-20200330-DLSR-iDIC-1-LF-90.sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 9; 'crossId', 21; 't0', 0; 'isNegative', 0}) ...
%         )...
%     );...
    
    struct(...
        'name', '字典反演结果0411', ...
        'flag', 'DLSR', ...
        'regParam', struct('lambda', 0.5, 'gamma', 0.1), ...
        'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 2}), ...
        'options', bsSetFields(GInvParam.seisInvOptions, ...
            {'maxIter', 10; 'innerIter', 5; 'initRegParam', 0.5}), ...
        'showFiltCoef', 0.8, ...
        'isSaveSegy', 1, ...
        'load', struct(...
            'mode', 'off', ...
            'segyInfo', GSegyInfo, ...
            'fileName', '' ...
        )...
    );
    
%     struct(...
%         'name', '普通方法', ...
%         'flag', 'LFC', ...
%         'regParam', 0.2, ...
%         'parampkgs', [], ...
%         'options', bsSetFields(GInvParam.seisInvOptions, {'maxIter', 50;}), ...
%         'showFiltCoef', 0.2, ...
%         'isSaveSegy', 1, ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'segyInfo', GSegyInfo, ...
%             'fileName', '' ...
%         )...
%     ); 
};



%% 得到初步的反演结果
fprintf('反演剖面中...\n');
invResults = bsPostInvTrueMultiTraces(GInvParam, inIds, crossIds, timeLine, methods);

invResults{2}.data = bsFilterProfileData(invResults{2}.data, GInvParam.initModel.filtCoef, 0);
finalResults = invResults;
nRes = length(invResults);

% r_ids = bsGetIdsFromWelllogs(wellLogs, {'W1-2113', 'W2-2013', 'W3-1931'});
r_ids = [];
mustInclude = bsGetIdsFromWelllogs(wellLogs, {'W1-2113', 'W2-2013', 'W3-1931', 'W1-2201', 'W1-2132', 'W2-2024', 'W3-1833', 'W1-2113', 'W2-2013', 'W3-1931'});
trainNum = 104;
mode = 'full_freq';     
% mode = 'seismic_high';
mode = 'low_high';
% mode = 'residual';
lowFreq = 90;
sparsity = 1;

GTrainDICParam = bsCreateGTrainDICParam(...
        'csr', ...
        'feature_reduction', 1, ...
        'normalizationMode', 'feat_max_min', ...
        'isAddTimeInfo', 1, ...
        'isAddLocInfo', 1, ...
        'title', 'HLF', ...
        'sizeAtom', 80, ...
        'sparsity', 5, ...
        'iterNum', 5, ...
        'nAtom', 2000, ...
        'filtCoef', 1, ...
        'isRebuild', 0);
    
%% 联合字典稀疏重构
finalResults{nRes + 1} = bsPostRebuildByCSRWithWholeProcess(GInvParam, timeLine, wellLogs, ...
    methods(nRes), invResults{nRes}, sprintf('联合字典 高分辨率重构'), ...
    'gamma', csrGamma, ...
    'trainNum', trainNum, ...
    'wellFiltCoef', GInvParam.initModel.filtCoef, ...
    'exception', [], ...
    'mustInclude', mustInclude, ...
    'mode', mode, ...
    'lowCut', lowFreq/500, ...
    'highCut', 0.5, ...
    'GTrainDICParam', bsSetFields(GTrainDICParam, {'title', 'inv_well'}), ...
    'sparsity', sparsity);

%%
% finalResults{nRes + 2} = bsPostRebuildByCSRWithWholeProcess(GInvParam, timeLine, wellLogs, ...
%     methods(nRes), invResults{nRes}, sprintf('联合字典重构 (参考数据为普通方法反演结果)'), ...
%     'gamma', csrGamma, ...
%     'trainNum', trainNum, ...
%     'exception', [], ...
%     'wellFiltCoef', GInvParam.initModel.filtCoef, ...
%     'mustInclude', mustInclude, ...
%     'mode', mode, ...
%     'lowCut', lowFreq/500, ...
%     'highCut', 0.5, ...
%     'GTrainDICParam', bsSetFields(GTrainDICParam, {'title', 'LFC_inv_well'}), ...
%     'sparsity', sparsity);


%% 画图
% GShowProfileParam.range.seismic = [-1.5 1.5]*1e4;
% % GShowProfileParam.range.ip = [5800 7700];

GShowProfileParam.range.ip = [5800 7600];
% GShowProfileParam.range.ip = [6100 7600];
GShowProfileParam.range.seismic = [-3 3]*1e4;
% GShowProfileParam.colormap.allTheSame = bsGetColormap('original');
GShowProfileParam.colormap.allTheSame = bsGetColormap('velocity');
GShowProfileParam.colormap.seismic = flipud(bsGetColormap('seismic'));
GShowProfileParam.isColorReverse = 0;
GShowProfileParam.plotParam.fontname = '宋体';
GShowProfileParam.plotParam.fontsize = 11;
GShowProfileParam.scaleFactor = 4;
GShowProfileParam.showWellOffset = 1;
GShowProfileParam.plotParam.fontsize = 10;

GShowProfileParam.showPartVert.upTime = 40;
GShowProfileParam.showPartVert.downTime = 50;
GShowProfileParam.showPartVert.mode = 'up_down_time';
% GShowProfileParam.showPartVert.mode = 'in_2_horizons';
% GShowProfileParam.showPartVert.horizonIds = [1, 2];
% GShowProfileParam.showPartVert.mode = 'off';
GShowProfileParam.isShowColorWells =1;
GShowProfileParam.isShowWellNames = 1;

GShowProfileParam.isShowHorizon = 0;

for i = 1 : length(finalResults)
    finalResults{i}.showFiltCoef = 1;
end
finalResults{end}.showFiltCoef = 1;
GShowProfileParam.showWellFiltCoef = 0.5;

% GInvParam.usedTimeLineId = 1;
% GShowProfileParam.showPartVert.upTime = 75;
% GShowProfileParam.showPartVert.downTime = 45;
% GShowProfileParam.showPartVert.mode = 'up_down_time';
bsShowInvProfiles(GInvParam, GShowProfileParam, finalResults, [], timeLine);
% set(gcf, 'position', [ 16          54        1653         715]);
set(gcf, 'position', [141         98        1580         892]);

% bsShowInvProfiles(GInvParam, GShowProfileParam, finalResults, wellLogs, timeLine);
% % set(gcf, 'position', [ 16          54        1653         715]);
% set(gcf, 'position', [141         98        1580         892]);
NLMResults = finalResults;
NLMResults(end) = bsNLMInvResults(NLMResults(end), [], ...
        'searchOffset', 5, 'windowSize', [5, 5], 'nPointsUsed', 4, ...
    'stride', [1, 1, 1], 'searchStride', [1, 1, 1] ...
    );
NLMResults{1}.name = [finalResults{end}.name , ' 光滑后'];
bsShowInvProfiles(GInvParam, GShowProfileParam, NLMResults, [], timeLine);
set(gcf, 'position', [141         98        1580     892]);


