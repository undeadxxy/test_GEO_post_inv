clear;
close all;
clc;

% load timeLine.mat;
load hrs_horizon.mat;
load wellLogs.mat;

basePath = 'E:/HRS projects/GEO_POST/';

GShowProfileParam = bsCreateGShowProfileParam();
GInvParam = bsCreateGInvParam('poststack');
GSegyInfo = bsCreateGSegyInfo();
GShowProfileParam.showWellFiltCoef = 0.4; % filter coeficient for displaying color wells in profile

GInvParam.dt = 1;    
GInvParam.upNum = 50;
GInvParam.downNum = 46;
GInvParam.indexInWellData.ip = 1;
GInvParam.indexInWellData.time = 2;
GInvParam.usedTimeLineId = 2;
GInvParam.isParallel = 0;
GInvParam.isPrintBySavingFile = 0;
GInvParam.postSeisData.segyInfo = GSegyInfo;
GInvParam.postSeisData.fileName = [basePath, '/seismic/phase_shift_90.sgy'];

% sprintf('%s/seismic/seismic.sgy', basePath);

GSegyInfo.inlineId = 9;
GSegyInfo.crossId = 21;
GSegyInfo.t0 = 0;

validRange = [1 1e10];

% Get inline and crossline of a profile crossing several wells
% [inIds, crossIds] = bsGetCDPsByRange([1:142], [1:110]);
[inIds, crossIds] = bsGetProfileCrossingWells(GInvParam, wellLogs([23, 21, 18, 53, 80, 75]), ...
    'isAlongCrossline', 0);

highName = 'E:\HRS projects\GEO_POST\chenting\0206SMIResult_wellnumber15modifychoosewellnewhor.sgy';
lowName1 = 'E:\HRS projects\GEO_POST\sgy_results\Ip_字典反演结果_inline_[1_142]_crossline_[16_83].sgy';
% lowName = [basePath, '\sgy_results\Ip_DLSR (gamma=0.4 sparsity=2)_inline_[1_142]_crossline_[1_110].sgy'];
outFileName1 = [basePath, '\sgy_results\Mixed1.sgy'];
lowName2 = 'E:\HRS projects\GEO_POST\sgy_results\Ip_普通方法_inline_[1_142]_crossline_[16_83].sgy';
outFileName2 = [basePath, '\sgy_results\Mixed2.sgy'];

fs1 = 60;
fs2 = 80;

bsMixTwoResults(lowName1, highName, outFileName1, GSegyInfo, ...
    inIds, crossIds, timeLine{2}, GInvParam.upNum, GInvParam.downNum, GInvParam.dt, validRange, fs1, fs2);

bsMixTwoResults(lowName2, highName, outFileName2, GSegyInfo, ...
    inIds, crossIds, timeLine{2}, GInvParam.upNum, GInvParam.downNum, GInvParam.dt, validRange, fs1, fs2);

methods = {
    
    struct(...
        'name', 'ChenTing result', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', highName, ...
            'segyInfo', GSegyInfo ...
        )...
    );...
    
    struct(...
        'name', 'Sparse Impulse', ...
        'isSaveMat', 0, ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', [basePath, '\inv_result\geoeast_impedance_sparse_impulse_bgp.sgy'], ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 189; 'crossId', 21; 't0', 780}) ...
        )...
    );...
    
    struct(...
        'name', 'DLSR inversion result', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', lowName1, ...
            'segyInfo', GSegyInfo ...
        )...
    );...
  
    struct(...
        'name', 'LFC', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', lowName2, ...
            'segyInfo', GSegyInfo ...
        )...
    );...
    
    
    struct(...
        'name', 'Mixed by DLSR', ...
        'showFiltCoef', 1, ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', outFileName1, ...
            'segyInfo', GSegyInfo ...
        )...
    );...
    
    struct(...
        'name', 'Mixed with LFC', ...
        'showFiltCoef', 1, ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', outFileName2, ...
            'segyInfo', GSegyInfo ...
        )...
    );...
    
    
};

% [inIds, crossIds] = bsGetProfileCrossingWells(GInvParam, wellLogs(1), ...
%     'isAlongCrossline', 1);

invResults = bsPostInvTrueMultiTraces(GInvParam, inIds, crossIds, timeLine, methods);

% NLMResults = invResults;
% NLMResults([5, 6]) = bsNLMInvResults(invResults([5, 6]), [], ...
%     'searchOffset', 4, 'windowSize', [2, 4], 'nPointsUsed', 4, ...
%     'stride', [1, 1, 1], 'searchStride', [1, 1, 1] ...
% );

GShowProfileParam.range.ip = [5800 7600];
GShowProfileParam.range.seismic = [-3 3]*1e4;
GShowProfileParam.colormap.allTheSame = bsGetColormap('velocity');
GShowProfileParam.isColorReverse = 0;

GShowProfileParam.scaleFactor = 4;
GShowProfileParam.showWellOffset = 1;
GShowProfileParam.plotParam.fontsize = 11;
% GShowProfileParam.showPartVert.mode = 'in_2_horizons';
% GShowProfileParam.showPartVert.horizonIds = [1, 3];
GShowProfileParam.showPartVert.upTime = 40;
GShowProfileParam.showPartVert.downTime = 50;
GShowProfileParam.showPartVert.mode = 'up_down_time';
GShowProfileParam.isShowHorizon = 0;

for i = 1 : length(invResults)
    invResults{i}.showFiltCoef = 0.7;
end

bsShowInvProfiles(GInvParam, GShowProfileParam, invResults, wellLogs, timeLine);
set(gcf, 'position', [ 96          54        1672         780]);
