testCommonCode;
 
% synFileName = 'E:/HRS projects/GEO_POST//seismic//synthetic__gamma=1.00_sparsity_5_inline_[1_142]_crossline_[16_83].sgy';
% GInvParam.postSeisData.fileName = synFileName;


GInvParam.seisInvOptions.GBOptions.isSaveMiddleRes = 1;
GInvParam.errorModel.isUse = 0;
GSparseInvParam.sparsity = 1;
gamma = 0.2;

% fileName = 'E:/HRS projects/GEO_POST//seismic//error_model__gamma=0.90_sparsity_5_inline_[16_129]_crossline_[16_91].sgy';
% wells = cell2mat(wellLogs);
% nWell = length(wells);
% inIds = [wells.inline];
% crossIds = [wells.crossline];
% synData = bsReadTracesByIdsAndTimeLine(fileName, GInvParam.postSeisData.segyInfo, inIds, crossIds, ...
%             timeLine{GInvParam.usedTimeLineId}, GInvParam.upNum, GInvParam.downNum, GInvParam.dt);
%     
% GInvParam.postSeisData.mode = 'function';
%         GInvParam.postSeisData.fcn = @(inline, crossline, startTime)...
%             (synData(1:end-1, inIds==inline &crossIds==crossline));
        
% test methods
methods = {
% 1. name:      method name
% 2. flag:      method flag
% 3. regParam:  regularization parameter
% 4. parampkgs: some other information required for regularization
% 5. options:   options for controling inversion process
    
%     struct(...
%         'name', 'HAGCS-TV', ...
%         'flag', 'HAGCS', ...
%         'regParam', 0.1, ...
%         'parampkgs', [], ...
%         'options', bsSetFields(GInvParam.seisInvOptions, {'regFunc', @bsReg1DTV; ...
%             'addLowFreqConstraint', 1; ...
%             'initRegParam', 0.05}) ...
%     );
%     
    
    
%     struct(...
%         'name', 'HAGCS-LFC', ...
%         'flag', 'HAGCS', ...
%         'regParam', 0.01, ...
%         'parampkgs', [], ...
%         'options', bsSetFields(GInvParam.seisInvOptions, {'regFunc', @bsReg1DTKInitModel; ...
%             'addLowFreqConstraint', 0; ...
%             'initRegParam', 0.05}) ...
%     );
    
    struct(...
        'name', '方法1', ...
        'flag', 'LFC', ...
        'regParam', 0.1, ...
        'parampkgs', [], ...
        'options', bsSetFields(GInvParam.seisInvOptions, {'maxIter', 40}) ...
    );

%     struct(...
%         'name', 'LFC-Similarity', ...
%         'flag', 'LFC', ...
%         'regParam', 0.01, ...
%         'parampkgs', [], ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%         {'maxIter', 1000; 'mainFunc', @bsLinearTwoNormSimilarity}) ...
%     );
%     
%     struct(...
%         'name', '字典 (gamma=0.2)', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 1, 'gamma', 0.2), ...
%         'parampkgs', GSparseInvParam, ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 5; 'innerIter', 40; 'initRegParam', 0.1}) ...
%     );
%     
%     struct(...
%         'name', '字典 (gamma=0.5)', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 1, 'gamma', 0.5), ...
%         'parampkgs', GSparseInvParam, ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 5; 'innerIter', 40; 'initRegParam', 0.1}) ...
%     );
    
%     struct(...
%         'name', '字典反演结果', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 5, 'gamma', 0.3), ...
%         'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isChangeK', 0}), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 8; 'innerIter', 40; 'initRegParam', 0.2}), ...
%         'showFiltCoef', 0.8 ...
%     );
    

    
%     
%     struct(...
%         'name', '字典反演结果 \gamma=0.1', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 2, 'gamma', 0.1), ...
%         'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 1;}), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 8; 'innerIter', 40; 'initRegParam', 0.2}), ...
%         'showFiltCoef', 0.8 ...
%     );
    
    struct(...
        'name', '方法2', ...
        'flag', 'DLSR', ...
        'regParam', struct('lambda', 2, 'gamma', 0.4), ...
        'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isChangeK', 1}), ...
        'options', bsSetFields(GInvParam.seisInvOptions, ...
            {'maxIter', 8; 'innerIter', 40; 'initRegParam', 0.2}), ...
        'showFiltCoef', 0.8 ...
    );
%     
%     struct(...
%         'name', '字典反演结果 \gamma=0.7', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 2, 'gamma', 0.7), ...
%         'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isChangeK', 1}), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 8; 'innerIter', 40; 'initRegParam', 0.2}), ...
%         'showFiltCoef', 0.8 ...
%     );
    
%         struct(...
%         'name', '联合字典重构 (参考数据为字典反演结果)', ...
%         'isSaveMat', 0, ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', [basePath, 'sgy_results/Ip-联合字典重构 (参考数据为字典反演结果)-CSR.sgy'], ...
%             'segyInfo', GInvParam.postSeisData.segyInfo ...
%         )...
%     );...
    
%     struct(...
%         'name', '字典反演结果 \lambda=8 \gamma=0.2', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 8, 'gamma', 0.2), ...
%         'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isChangeK', 1}), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 5; 'innerIter', 40; 'initRegParam', 0.2}), ...
%         'showFiltCoef', 0.8 ...
%     );
%     
%     struct(...
%         'name', '字典反演结果 \lambda=0.4 \gamma=0.6', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 4, 'gamma', 0.6), ...
%         'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isChangeK', 1}), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 8; 'innerIter', 40; 'initRegParam', 0.2}), ...
%         'showFiltCoef', 0.8 ...
%     );
    
%     struct(...
%         'name', '字典反演结果 \lambda=8 \gamma=0.6', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 8, 'gamma', 0.6), ...
%         'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isChangeK', 1}), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 5; 'innerIter', 40; 'initRegParam', 0.2}), ...
%         'showFiltCoef', 0.8 ...
%     );
%     
%     struct(...
%         'name', '字典反演结果 \lambda=16', ...
%         'flag', 'DLSR', ...
%         'regParam', struct('lambda', 16, 'gamma', gamma), ...
%         'parampkgs', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isChangeK', 1}), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, ...
%             {'maxIter', 5; 'innerIter', 40; 'initRegParam', 0.2}), ...
%         'showFiltCoef', 0.8 ...
%     );
    
    
    
%     struct(...
%         'name', '地质统计学', ...
%         'flag', '', ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', [basePath, '\chenting\0206SMIResult_wellnumber15modifychoosewellnewhor.sgy'], ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 9; 'crossId', 21; 't0', 0}) ...
%         )...
%     );
    
%     struct(...
%         'name', '中低频 反滤波', ...
%         'flag', '', ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', [basePath, '\sgy_results\Ip_中低频 反滤波_inline_[1_142]_crossline_[61_84].sgy'], ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 9; 'crossId', 21; 't0', 0}) ...
%         )...
%     );

%     struct(...
%         'name', '稀疏脉冲', ...
%         'isSaveMat', 0, ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', [basePath, '\inv_result\geoeast_impedance_sparse_impulse_bgp.sgy'], ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 189; 'crossId', 21; 't0', 780}) ...
%         )...
%     );...
    
    
    
%     struct(...
%         'name', '全变差 普通方法', ...
%         'flag', 'TV', ...
%         'regParam', 0.06, ...
%         'parampkgs', struct('diffOrder', 1), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, {'maxIter', 500; 'initRegParam', 0.05}) ...
%     ); 
% 
%     struct(...
%         'name', '光滑化 普通方法', ...
%         'flag', 'TK', ...
%         'regParam', 1, ...
%         'parampkgs', struct('diffOrder', 2), ...
%         'options', bsSetFields(GInvParam.seisInvOptions, {'maxIter', 200; 'initRegParam', 0.05}) ...
%     ); 
};
GShowProfileParam.plotParam.fontname = '宋体';
GShowProfileParam.plotParam.fontsize = 12;
GShowProfileParam.range.ip = [4800 8000];
% inverse the blind wells
% for iWell = setdiff(1:104, train_ids) %[56    86    72    90    74    76    80    17    83    35]; %bsRandSeq(1:104, 10)
% for iWell = 81
for iWell = 18
    wellInfo = wellLogs{iWell};
    [invVals, outputs] = bsPostInvTrueWell(GInvParam, wellInfo, timeLine, methods);
    
    bsShowPostInvLogResult(GInvParam, GShowProfileParam, invVals, GTrainDICParam.filtCoef, 0);
    bsShowPostFFTResult(GInvParam, GShowProfileParam, invVals, wellInfo);
    set(gcf, 'position', [666   171   761   476]);
%     title(sprintf('Well %s', wellLogs{iWell}.wellName));
end



