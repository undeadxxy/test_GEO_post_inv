testCommonCode;
     

GShowProfileParam.rangeIP = [5000 8200];
% GShowProfileParam.showProfileFiltCoef = 1;
GShowProfileParam.scaleFactor = 3;  % interpolate the inversion results avoid zigzag 
% set the options for showing the results
% GShowProfileParam.dataRange = [5000 8000];        
GShowProfileParam.showWellOffset = 1;
GShowProfileParam.showWellFiltCoef = 0.4;

GPostInvParam.bound.mode = 'based_on_init';
GPostInvParam.bound.offset_init = 1500;

% set the options of inversion process
seisInvOptions = bsCreateSeisInv1DOptions();
seisInvOptions.GBOptions.optAlgHandle = @bsOptQCG;
seisInvOptions.GBOptions.display = 'off';
seisInvOptions.GBOptions.optAlgParam.updateFlag = 'PR';
seisInvOptions.GBOptions.isSaveMiddleRes = true;

seisInvOptions.maxIter = 400;
seisInvOptions.innerIter = 5;
seisInvOptions.addLowFreqConstraint = true;
seisInvOptions.initRegParam = 0.5;
seisInvOptions.searchRegParamFcn = [];

GPostInvParam.initModel.initLog = 0.5;
GPostInvParam.isParallel = 1;

% set the options for training dictionary
GTrainDICParam.sizeAtom = 80;
GTrainDICParam.nAtom = 8000;
GTrainDICParam.filtCoef= 0.4;

% set the options for sparse inversion
GSparseInvParam.sparsity = 1;
GSparseInvParam.stride = 1;
GSparseInvParam.isSparseRebuild = 0;

% the name of the folder to save the learned dictionaries
trainNum = 100;
% train_names = {'W1-1901', 'W1-2013', 'W1-2133', 'W2-1901', 'W2-2024', 'W2-2214', 'W3-1833'};
% train_ids = getIdsFromWelllogs(wellLogs, train_names);
train_ids = randperm(length(wellLogs), trainNum);
% trainNum = length(trainWelllogs);
[DIC, train_ids] = bsTrainOneDIC(wellLogs, train_ids, GTrainDICParam);

blind_ids = setdiff(1:length(wellLogs), train_ids);
GSparseInvParam.DIC = DIC;

% test methods
methods = {
% 1. name:      method name
% 2. flag:      method flag
% 3. regParam:  regularization parameter
% 4. parampkgs: some other information required for regularization
% 5. options:   options for controling inversion process

    struct(...
        'name', 'DLSR', ...
        'flag', 'DLSR', ...
        'regParam', struct('lambda', 10, 'gamma', 0), ...
        'parampkgs', struct('GSparseInvParam', GSparseInvParam), ...
        'options', bsSetFields(seisInvOptions, {'maxIter', 10; 'innerIter', 100; 'initRegParam', 0.2}), ...
        'showFiltCoef', 1, ...
        'load', struct(...
            'mode', 'off', ...
            'fileName', '' ...
        )...
    );
    
    struct(...
        'name', 'Low Frequency Constraint', ...
        'flag', 'LCF', ...
        'regParam', 0.5, ...
        'parampkgs', [], ...
        'options', bsSetFields(seisInvOptions, {'maxIter', 200;}), ...
        'showFiltCoef', 0.4, ...
        'load', struct(...
            'mode', 'off', ...
            'fileName', '' ...
        )...
    ); 
    
    struct(...
        'name', 'TV', ...
        'flag', 'TV', ...
        'regParam', 0.2, ...
        'parampkgs', struct('diffOrder', 1), ...
        'options', bsSetFields(seisInvOptions, {'maxIter', 200; 'initRegParam', 0.5}), ...
        'showFiltCoef', 0.4, ...
        'load', struct(...
            'mode', 'mat', ...
            'fileName', '' ...
        )...
    ); 
%     struct(...
%         'name', 'TK', ...
%         'flag', 'TK', ...
%         'regParam', 0.4, ...
%         'parampkgs', struct('diffOrder', 2), ...
%         'options', bsSetFields(seisInvOptions, {'maxIter', 200; 'initRegParam', 0.5}), ...
%         'showFiltCoef', 0.4, ...
%         'load', struct(...
%             'mode', 'mat', ...
%             'fileName', '' ...
%         )...
%     ); 
%     
%     
    struct(...
        'name', 'Sparse Impulse', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', 'C:\Users\binst\HRS projects\GEO_POST\inv_result\geoeast_impedance_sparse_impulse_bgp.sgy', ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 780}) ...
        )...
    );...
%     
    struct(...
        'name', 'Wave Clustering', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', 'C:\Users\binst\HRS projects\GEO_POST\inv_result\geoeast_newmethod_wave_cluster_bgp.sgy', ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 819}) ...
        )...
    );...
%     
    struct(...
        'name', 'Jason', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', 'C:\Users\binst\HRS projects\GEO_POST\inv_result\inverted_impedance_jason_bgp.sgy', ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 750}) ...
        )...
    );
    
};

inId = 47;
traceNum = 110;
inIds = ones(1, traceNum) * inId;
crossIds = 1 : traceNum;

% perform the inversion process based on given methods
invResults = bsPostInvTrueMultiTraces(GPostInvParam, inIds, crossIds, timeLine, methods);
% show the comparisons of the inversion results of different methods
bsShowInvProfiles(GPostInvParam, GShowProfileParam, invResults, wellLogs);





