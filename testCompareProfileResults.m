testCommonCode;
GShowProfileParam.dataRange = [5000 8000];        
GShowProfileParam.rangeIP = [5000 8200];
GShowProfileParam.rangeSeismic = [];
% GShowProfileParam.showProfileFiltCoef = 1;
GShowProfileParam.scaleFactor = 3;  % interpolate the inversion results avoid zigzag 
% set the options for showing the results

GShowProfileParam.showWellOffset = 1;
GShowProfileParam.showWellFiltCoef = 0.4;
load attColor.mat;
load original_color.mat
GShowProfileParam.dataColorTbl = original_color;
GShowProfileParam.isColorReverse = 0;           % whether call filpud fcn to reverse the color table

GPostInvParam.bound.mode = 'based_on_init';
GPostInvParam.bound.offset_init = 1500;

% set the options of inversion process
seisInvOptions = bsCreateSeisInv1DOptions();
seisInvOptions.GBOptions.optAlgHandle = @bsOptQCG;
seisInvOptions.GBOptions.display = 'off';
seisInvOptions.GBOptions.optAlgParam.updateFlag = 'PR';
seisInvOptions.GBOptions.isSaveMiddleRes = true;

seisInvOptions.maxIter = 400;
seisInvOptions.innerIter = 5;
seisInvOptions.addLowFreqConstraint = true;
seisInvOptions.initRegParam = 0.5;
seisInvOptions.searchRegParamFcn = [];

GPostInvParam.initModel.initLog = 0.5;
GPostInvParam.isParallel = 1;
GPostInvParam.isSaveMode=0;

% set the options for training dictionary
GTrainDICParam.sizeAtom = 80;
GTrainDICParam.nAtom = 8000;
GTrainDICParam.filtCoef= 0.4;

% set the options for sparse inversion
GSparseInvParam.sparsity = 2;
GSparseInvParam.stride = 1;
GSparseInvParam.isSparseRebuild = 0;

GPostInvParam.modelSavePath = sprintf('%s/volume_new', basePath);
GShowProfileParam.rangeIP = [5200 8200];

% the name of the folder to save the learned dictionaries
trainNum = 100;
% train_names = {'W1-1901', 'W1-2013', 'W1-2133', 'W2-1901', 'W2-2024', 'W2-2214', 'W3-1833'};
% train_ids = getIdsFromWelllogs(wellLogs, train_names);
train_ids = randperm(length(wellLogs), trainNum);
% trainNum = length(trainWelllogs);
[DIC, train_ids] = bsTrainOneDIC(wellLogs, train_ids, GTrainDICParam);

blind_ids = setdiff(1:length(wellLogs), train_ids);
GSparseInvParam.DIC = DIC;

GPostInvParam.upNum=80;
GPostInvParam.downNum=50;

% test methods
methods = {
% 1. name:      method name
% 2. flag:      method flag
% 3. regParam:  regularization parameter
% 4. parampkgs: some other information required for regularization
% 5. options:   options for controling inversion process

%     struct(...
%         'name', 'Initial model', ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', 'G:\matlab_projects_inv\data\model\modelall_Volume_PP_IMP.sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 0}) ...
%         )...
%     );...
    
%     struct(...
%         'name', 'Seismic', ...
%         'type', 'Seismic', ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', 'G:\matlab_projects_inv\data\seismic\seismic.sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 3; 'crossId', 6; 't0', 0}) ...
%         )...
%     );...
    
%     struct(...
%         'name', 'Low Frequency Constraint', ...
%         'flag', 'LCF', ...
%         'regParam', 0.5, ...
%             'fileName', GPostInvParam.initModel.segyFileName, ...
%             'segyInfo', GPostInvParam.initModel.segyInfo ...
%         )...
%     );...
    
    struct(...
        'name', 'Seismic (phase shifte 90)', ...
        'type', 'Seismic', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', 'D:\data\seismic data\geo-block\data\seismic\phase_shift_90.sgy', ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 3; 'crossId', 6; 't0', 0; 'isNegative', 1}) ...
        )...
    );...
%     
%     struct(...
%         'name', 'Low Frequency Constraint', ...
%         'flag', 'LCF', ...
%         'regParam', 0.2, ...
%         'parampkgs', [], ...
%         'options', bsSetFields(seisInvOptions, {'maxIter', 200;}), ...
%         'showFiltCoef', 0.4, ...
%         'load', struct(...
%             'mode', 'off', ...
%             'mode', 'mat', ...
%             'fileName', '' ...
%         )...
%     ); 
%     
%     struct(...
%         'name', 'TV', ...
%         'flag', 'TV', ...
%         'regParam', 0.2, ...
%         'parampkgs', struct('diffOrder', 1), ...
%         'options', bsSetFields(seisInvOptions, {'maxIter', 200; 'initRegParam', 0.5}), ...
%         'showFiltCoef', 0.4, ...
%         'load', struct(...
%             'mode', 'off', ...
%             'fileName', '' ...
%         )...
%     ); 
    struct(...
        'name', 'DLSR', ...
        'flag', 'DLSR', ...
        'regParam', struct('lambda', 5, 'gamma', 0), ...
        'parampkgs', struct('GSparseInvParam', GSparseInvParam), ...
        'options', bsSetFields(seisInvOptions, {'maxIter', 8; 'innerIter', 100; 'initRegParam', 0.5}));    
    
    struct(...
        'name', 'DLSR (K=1 gamma=0.7)', ...
        'flag', 'DLSR', ...
        'regParam', struct('lambda', 1, 'gamma', 0.7), ...
        'parampkgs', struct('GSparseInvParam', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isSparseRebuild', 1; 'reconstructType', 'simpleAvg'})), ...
        'options', bsSetFields(seisInvOptions, {'maxIter', 5; 'innerIter', 20; 'initRegParam', 2}), ...
        'showFiltCoef', 1, ...
        'isSaveSegy', 1, ...
        'isSaveMat', 1, ...
        'load', struct(...
            'mode', 'off', ...
            'fileName', '' ...
        )...
    );
    
%     struct(...
%         'name', 'TK', ...
%         'flag', 'TK', ...
%         'regParam', 0.4, ...
%         'parampkgs', struct('diffOrder', 2), ...
%         'options', bsSetFields(seisInvOptions, {'maxIter', 200; 'initRegParam', 0.5}), ...
%         'showFiltCoef', 0.4, ...
%         'load', struct(...
%             'mode', 'mat', ...
%             'fileName', '' ...
%         )...
%     ); 
%     
%     

%     struct(...
%         'name', 'Sparse Impulse', ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', 'G:\matlab_projects_inv\data\BGP_result\geoeast_impedance_sparse_impulse_bgp.sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 780}) ...
%         )...
%     );...
%     
%     struct(...
%         'name', 'Wave Clustering', ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', 'G:\matlab_projects_inv\data\BGP_result\geoeast_newmethod_wave_cluster_bgp.sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 819}) ...
%         )...
%     );...
%     
%     struct(...
%         'name', 'Jason', ...
%         'load', struct(...
%             'mode', 'segy', ...
%             'fileName', 'G:\matlab_projects_inv\data\BGP_result\inverted_impedance_jason_bgp.sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 750}) ...
%         )...
%     );  

%% ≈‹∆ √Ê
% inId = 10;
%             'fileName', 'C:\Users\binst\HRS projects\GEO_POST\inv_result\geoeast_newmethod_wave_cluster_bgp.sgy', ...
%             'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 819}) ...
%         )...
%     );...
    
    struct(...
        'name', 'Sparse Impulse', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', 'C:\Users\binst\HRS projects\GEO_POST\inv_result\geoeast_impedance_sparse_impulse_bgp.sgy', ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 780}) ...
        )...
    );...
% %     
    
% %     
    struct(...
        'name', 'Jason', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', 'C:\Users\binst\HRS projects\GEO_POST\inv_result\inverted_impedance_jason_bgp.sgy', ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 48; 'crossId', 6; 't0', 750}) ...
        )...
    ); 

% inverse a profile
% inId = 114;
% traceNum = 110;
% inIds = ones(1, traceNum) * inId;
% crossIds = 1 : traceNum;



%% ≈‹ÃÂ
% traceNum = 142;
% inIds = 1 : traceNum;
% crossIds = ones(1, traceNum) * 16;


% inverse the whole volume
% [X, Y] = meshgrid(1:142, 1:110);
% inIds = reshape(X, 1, 142*110);
% crossIds = reshape(Y, 1, 142*110);
% inIds=[];
% for i=1:142
%     inIds = [inIds,ones(1, 110) * i];
% end
% crossIds=[];
% for i=1:142
%     crossIds = [crossIds,1:110];
% end
% perform the inversion process based on given methods
invResults = bsPostInvTrueMultiTraces(GPostInvParam, inIds, crossIds, timeLine, methods);
% show the comparisons of the inversion results of different methods
bsShowInvProfiles(GPostInvParam, GShowProfileParam, invResults, wellLogs);
set(gcf, 'position', [140         132        1360         654]);
bsSaveFigure('./pictures_0.5', sprintf('inline_%d', inId));
% bsSaveFigure('./pictures', sprintf('inline_%d_compare', inId));


methods = {
    
    struct(...
        'name', 'Seismic (phase shifte 90)', ...
        'type', 'Seismic', ...
        'load', struct(...
            'mode', 'segy', ...
            'fileName', 'D:\data\seismic data\geo-block\data\seismic\phase_shift_90.sgy', ...
            'segyInfo', bsSetFields(GSegyInfo, {'inlineId', 3; 'crossId', 6; 't0', 0; 'isNegative', 1}) ...
        )...
    );...
    
    struct(...
        'name', 'DLSR (K=1 gamma=0)', ...
        'flag', 'DLSR', ...
        'regParam', struct('lambda', 1, 'gamma', 0), ...
        'parampkgs', struct('GSparseInvParam', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isSparseRebuild', 1; 'reconstructType', 'simpleAvg'})), ...
        'options', bsSetFields(seisInvOptions, {'maxIter', 5; 'innerIter', 20; 'initRegParam', 2}), ...
        'showFiltCoef', 1, ...
        'isSaveSegy', 1, ...
        'isSaveMat', 1, ...
        'load', struct(...
            'mode', 'off', ...
            'fileName', '' ...
        )...
    );
    
    struct(...
        'name', 'DLSR (K=1 gamma=0.7)', ...
        'flag', 'DLSR', ...
        'regParam', struct('lambda', 1, 'gamma', 0.7), ...
        'parampkgs', struct('GSparseInvParam', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isSparseRebuild', 1; 'reconstructType', 'simpleAvg'})), ...
        'options', bsSetFields(seisInvOptions, {'maxIter', 5; 'innerIter', 20; 'initRegParam', 2}), ...
        'showFiltCoef', 1, ...
        'isSaveSegy', 1, ...
        'isSaveMat', 1, ...
        'load', struct(...
            'mode', 'mat', ...
            'fileName', '' ...
        )...
    );
    
    struct(...
        'name', 'DLSR (K=1 gamma=1)', ...
        'flag', 'DLSR', ...
        'regParam', struct('lambda', 1, 'gamma', 1), ...
        'parampkgs', struct('GSparseInvParam', bsSetFields(GSparseInvParam, {'sparsity', 1; 'isSparseRebuild', 1; 'reconstructType', 'simpleAvg'})), ...
        'options', bsSetFields(seisInvOptions, {'maxIter', 5; 'innerIter', 20; 'initRegParam', 2}), ...
        'showFiltCoef', 1, ...
        'isSaveSegy', 1, ...
        'isSaveMat', 1, ...
        'load', struct(...
            'mode', 'off', ...
            'fileName', '' ...
        )...
    );
    
    
};

% perform the inversion process based on given methods
invResults = bsPostInvTrueMultiTraces(GPostInvParam, inIds, crossIds, timeLine, methods);
% show the comparisons of the inversion results of different methods
bsShowInvProfiles(GPostInvParam, GShowProfileParam, invResults, wellLogs);
set(gcf, 'position', [140         132        1360         654]);
% bsSaveFigure('./pictures', sprintf('inline_%d', inId));
bsSaveFigure('./pictures_0.5', sprintf('inline_%d_compare', inId));
